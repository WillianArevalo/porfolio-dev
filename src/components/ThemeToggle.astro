<div class="relative mr-1 ml-1">
  <button
    id="theme-toggle-btn"
    class="flex border-none text-zinc-800 transition appearance-none hover:scale-125 dark:text-zinc-200"
  >
    <span class="sr-only">Elige el tema</span>
    <svg
      id="light"
      class="transition-all size-5 theme-toggle-icon"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      stroke-width="2"
      stroke="currentColor"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
      style="scale: 1;"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0"></path>
      <path
        d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"
      ></path>
    </svg>
    <svg
      id="dark"
      class="absolute transition-all size-5 theme-toggle-icon"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      stroke-width="2"
      stroke="currentColor"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
      style="scale: 0;"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path
        d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"
      ></path>
    </svg>
    <svg
      id="system"
      class="absolute transition-all size-5 theme-toggle-icon"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      stroke-width="2"
      stroke="currentColor"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
      style="scale: 0;"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path
        d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z"
      ></path>
      <path d="M7 20h10"></path>
      <path d="M9 16v4"></path>
      <path d="M15 16v4"></path>
    </svg>
  </button>
  <div
    id="themes-menu"
    class="top-8 right-0 absolute border-gray-100 dark:border-zinc-900 hidden bg-white/90 dark:bg-zinc-900 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md p-1 border rounded-lg min-w-[8rem] text-sm"
  >
    <ul>
      <li
        class="hover:bg-zinc-200/70 dark:hover:bg-zinc-800 px-2 py-1.5 rounded-lg text-zinc-800 dark:text-zinc-200 cursor-pointer themes-menu-option"
      >
        Light
      </li>
      <li
        class="hover:bg-zinc-200/70 dark:hover:bg-zinc-800 px-2 py-1.5 rounded-lg text-zinc-800 dark:text-zinc-200 cursor-pointer themes-menu-option"
      >
        Dark
      </li>
      <li
        class="hover:bg-zinc-200/70 dark:hover:bg-zinc-800 px-2 py-1.5 rounded-lg text-zinc-800 dark:text-zinc-200 cursor-pointer themes-menu-option"
      >
        System
      </li>
    </ul>
  </div>
</div>

<script>
  let remove: (() => void) | null = null;

  const matchMedia = window.matchMedia("(prefers-color-scheme:dark)");
  const themesMenu = document.getElementById("themes-menu");

  const getThemePreference = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme") ?? "system";
    }
    return window.matchMedia("(prefers-color-scheme:dark)").matches
      ? "dark"
      : "light";
  };

  const updateIcon = (themePreference: string) => {
    document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
      (element as HTMLElement).style.scale =
        element.id === themePreference ? "1" : "0";
    });
  };

  const updateTheme = () => {
    if (remove != null) {
      remove();
    }

    matchMedia.addEventListener("change", updateTheme);

    remove = () => {
      matchMedia.removeEventListener("change", updateTheme);
    };

    const themePreference = getThemePreference();
    const isDark =
      themePreference === "dark" ||
      (themePreference === "system" && matchMedia.matches);

    updateIcon(themePreference);
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");
  };

  updateTheme();

  document.addEventListener("click", () =>
    (themesMenu as HTMLElement).classList.remove("open")
  );

  document
    .getElementById("theme-toggle-btn")
    ?.addEventListener("click", (e) => {
      e.stopPropagation();
      const isClosed = !(themesMenu as HTMLElement).classList.contains("open");
      (themesMenu as HTMLElement).classList[isClosed ? "add" : "remove"](
        "open"
      );
    });

  document.querySelectorAll(".themes-menu-option").forEach((element) => {
    element.addEventListener("click", (e) => {
      localStorage.setItem(
        "theme",
        (e.target as HTMLElement).innerText.toLowerCase().trim()
      );
      updateTheme();
    });
  });

  document.addEventListener("astro:after-swap", () => {
    updateTheme();
    window.scrollTo({ left: 0, top: 0, behavior: "instant" });
  });
</script>

<style>
  #themes-menu.open {
    display: inline;
    animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  @keyframes scale-up-center {
    0% {
      transform: scale(0.5);
    }
    100% {
      transform: scale(1);
    }
  }
</style>
